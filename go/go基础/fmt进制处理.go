/*    fmt.Printf()格式化
%b    表示为二进制
%c    该值对应的unicode码值
%d    表示为十进制
%o    表示为八进制
%q    该值对应的单引号括起来的go语法字符字面值，必要时会采用安全的转义表示
%x    表示为十六进制，使用a-f
%X    表示为十六进制，使用A-F
%U    表示为Unicode格式：U+1234，等价于"U+%04X"
%E    用科学计数法表示
%f    用浮点数表示

对于浮点型,3.7E-2表示浮点数0.037,如3.7E+1表示浮点数37
需要注意，在Go语言里，浮点数的相关部分只能由10进制表示法表示，而不能由8进制表示法或16进制表示法表示。比如，03.7表示的一定是浮点数3.7

*/

package main

import (
	"fmt"
)

func main() {

	var m int32 = 12

	fmt.Printf("10进制:%d\n", m)
	fmt.Printf("2进制:%b\n", m)
	fmt.Printf("8进制:%o\n", m)
	fmt.Printf("16进制:%X\n", m)
}